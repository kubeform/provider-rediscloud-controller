// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudAccount) DeepCopyInto(out *CloudAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudAccount.
func (in *CloudAccount) DeepCopy() *CloudAccount {
	if in == nil {
		return nil
	}
	out := new(CloudAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudAccountList) DeepCopyInto(out *CloudAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudAccountList.
func (in *CloudAccountList) DeepCopy() *CloudAccountList {
	if in == nil {
		return nil
	}
	out := new(CloudAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudAccountSpec) DeepCopyInto(out *CloudAccountSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(CloudAccountSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudAccountSpec.
func (in *CloudAccountSpec) DeepCopy() *CloudAccountSpec {
	if in == nil {
		return nil
	}
	out := new(CloudAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudAccountSpecResource) DeepCopyInto(out *CloudAccountSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccessSecretKey != nil {
		in, out := &in.AccessSecretKey, &out.AccessSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ConsolePassword != nil {
		in, out := &in.ConsolePassword, &out.ConsolePassword
		*out = new(string)
		**out = **in
	}
	if in.ConsoleUsername != nil {
		in, out := &in.ConsoleUsername, &out.ConsoleUsername
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProviderType != nil {
		in, out := &in.ProviderType, &out.ProviderType
		*out = new(string)
		**out = **in
	}
	if in.SignInLoginURL != nil {
		in, out := &in.SignInLoginURL, &out.SignInLoginURL
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudAccountSpecResource.
func (in *CloudAccountSpecResource) DeepCopy() *CloudAccountSpecResource {
	if in == nil {
		return nil
	}
	out := new(CloudAccountSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudAccountStatus) DeepCopyInto(out *CloudAccountStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudAccountStatus.
func (in *CloudAccountStatus) DeepCopy() *CloudAccountStatus {
	if in == nil {
		return nil
	}
	out := new(CloudAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subscription) DeepCopyInto(out *Subscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subscription.
func (in *Subscription) DeepCopy() *Subscription {
	if in == nil {
		return nil
	}
	out := new(Subscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionList) DeepCopyInto(out *SubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionList.
func (in *SubscriptionList) DeepCopy() *SubscriptionList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionPeering) DeepCopyInto(out *SubscriptionPeering) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionPeering.
func (in *SubscriptionPeering) DeepCopy() *SubscriptionPeering {
	if in == nil {
		return nil
	}
	out := new(SubscriptionPeering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionPeering) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionPeeringList) DeepCopyInto(out *SubscriptionPeeringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubscriptionPeering, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionPeeringList.
func (in *SubscriptionPeeringList) DeepCopy() *SubscriptionPeeringList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionPeeringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionPeeringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionPeeringSpec) DeepCopyInto(out *SubscriptionPeeringSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(SubscriptionPeeringSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionPeeringSpec.
func (in *SubscriptionPeeringSpec) DeepCopy() *SubscriptionPeeringSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionPeeringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionPeeringSpecResource) DeepCopyInto(out *SubscriptionPeeringSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AwsAccountID != nil {
		in, out := &in.AwsAccountID, &out.AwsAccountID
		*out = new(string)
		**out = **in
	}
	if in.AwsPeeringID != nil {
		in, out := &in.AwsPeeringID, &out.AwsPeeringID
		*out = new(string)
		**out = **in
	}
	if in.GcpNetworkName != nil {
		in, out := &in.GcpNetworkName, &out.GcpNetworkName
		*out = new(string)
		**out = **in
	}
	if in.GcpPeeringID != nil {
		in, out := &in.GcpPeeringID, &out.GcpPeeringID
		*out = new(string)
		**out = **in
	}
	if in.GcpProjectID != nil {
		in, out := &in.GcpProjectID, &out.GcpProjectID
		*out = new(string)
		**out = **in
	}
	if in.GcpRedisNetworkName != nil {
		in, out := &in.GcpRedisNetworkName, &out.GcpRedisNetworkName
		*out = new(string)
		**out = **in
	}
	if in.GcpRedisProjectID != nil {
		in, out := &in.GcpRedisProjectID, &out.GcpRedisProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VpcCIDR != nil {
		in, out := &in.VpcCIDR, &out.VpcCIDR
		*out = new(string)
		**out = **in
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionPeeringSpecResource.
func (in *SubscriptionPeeringSpecResource) DeepCopy() *SubscriptionPeeringSpecResource {
	if in == nil {
		return nil
	}
	out := new(SubscriptionPeeringSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionPeeringStatus) DeepCopyInto(out *SubscriptionPeeringStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionPeeringStatus.
func (in *SubscriptionPeeringStatus) DeepCopy() *SubscriptionPeeringStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionPeeringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpec) DeepCopyInto(out *SubscriptionSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(SubscriptionSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpec.
func (in *SubscriptionSpec) DeepCopy() *SubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecAllowlist) DeepCopyInto(out *SubscriptionSpecAllowlist) {
	*out = *in
	if in.Cidrs != nil {
		in, out := &in.Cidrs, &out.Cidrs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecurityGroupIDS != nil {
		in, out := &in.SecurityGroupIDS, &out.SecurityGroupIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecAllowlist.
func (in *SubscriptionSpecAllowlist) DeepCopy() *SubscriptionSpecAllowlist {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecAllowlist)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecCloudProvider) DeepCopyInto(out *SubscriptionSpecCloudProvider) {
	*out = *in
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = make([]SubscriptionSpecCloudProviderRegion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecCloudProvider.
func (in *SubscriptionSpecCloudProvider) DeepCopy() *SubscriptionSpecCloudProvider {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecCloudProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecCloudProviderRegion) DeepCopyInto(out *SubscriptionSpecCloudProviderRegion) {
	*out = *in
	if in.MultipleAvailabilityZones != nil {
		in, out := &in.MultipleAvailabilityZones, &out.MultipleAvailabilityZones
		*out = new(bool)
		**out = **in
	}
	if in.NetworkingDeploymentCIDR != nil {
		in, out := &in.NetworkingDeploymentCIDR, &out.NetworkingDeploymentCIDR
		*out = new(string)
		**out = **in
	}
	if in.NetworkingVpcID != nil {
		in, out := &in.NetworkingVpcID, &out.NetworkingVpcID
		*out = new(string)
		**out = **in
	}
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]SubscriptionSpecCloudProviderRegionNetworks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredAvailabilityZones != nil {
		in, out := &in.PreferredAvailabilityZones, &out.PreferredAvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecCloudProviderRegion.
func (in *SubscriptionSpecCloudProviderRegion) DeepCopy() *SubscriptionSpecCloudProviderRegion {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecCloudProviderRegion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecCloudProviderRegionNetworks) DeepCopyInto(out *SubscriptionSpecCloudProviderRegionNetworks) {
	*out = *in
	if in.NetworkingDeploymentCIDR != nil {
		in, out := &in.NetworkingDeploymentCIDR, &out.NetworkingDeploymentCIDR
		*out = new(string)
		**out = **in
	}
	if in.NetworkingSubnetID != nil {
		in, out := &in.NetworkingSubnetID, &out.NetworkingSubnetID
		*out = new(string)
		**out = **in
	}
	if in.NetworkingVpcID != nil {
		in, out := &in.NetworkingVpcID, &out.NetworkingVpcID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecCloudProviderRegionNetworks.
func (in *SubscriptionSpecCloudProviderRegionNetworks) DeepCopy() *SubscriptionSpecCloudProviderRegionNetworks {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecCloudProviderRegionNetworks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecDatabase) DeepCopyInto(out *SubscriptionSpecDatabase) {
	*out = *in
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = make([]SubscriptionSpecDatabaseAlert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AverageItemSizeInBytes != nil {
		in, out := &in.AverageItemSizeInBytes, &out.AverageItemSizeInBytes
		*out = new(int64)
		**out = **in
	}
	if in.ClientSslCertificate != nil {
		in, out := &in.ClientSslCertificate, &out.ClientSslCertificate
		*out = new(string)
		**out = **in
	}
	if in.DataPersistence != nil {
		in, out := &in.DataPersistence, &out.DataPersistence
		*out = new(string)
		**out = **in
	}
	if in.DbID != nil {
		in, out := &in.DbID, &out.DbID
		*out = new(int64)
		**out = **in
	}
	if in.ExternalEndpointForOssClusterAPI != nil {
		in, out := &in.ExternalEndpointForOssClusterAPI, &out.ExternalEndpointForOssClusterAPI
		*out = new(bool)
		**out = **in
	}
	if in.HashingPolicy != nil {
		in, out := &in.HashingPolicy, &out.HashingPolicy
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MemoryLimitInGb != nil {
		in, out := &in.MemoryLimitInGb, &out.MemoryLimitInGb
		*out = new(float64)
		**out = **in
	}
	if in.Module != nil {
		in, out := &in.Module, &out.Module
		*out = new(SubscriptionSpecDatabaseModule)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.PeriodicBackupPath != nil {
		in, out := &in.PeriodicBackupPath, &out.PeriodicBackupPath
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.PublicEndpoint != nil {
		in, out := &in.PublicEndpoint, &out.PublicEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ReplicaOf != nil {
		in, out := &in.ReplicaOf, &out.ReplicaOf
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = new(bool)
		**out = **in
	}
	if in.SourceIPS != nil {
		in, out := &in.SourceIPS, &out.SourceIPS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SupportOssClusterAPI != nil {
		in, out := &in.SupportOssClusterAPI, &out.SupportOssClusterAPI
		*out = new(bool)
		**out = **in
	}
	if in.ThroughputMeasurementBy != nil {
		in, out := &in.ThroughputMeasurementBy, &out.ThroughputMeasurementBy
		*out = new(string)
		**out = **in
	}
	if in.ThroughputMeasurementValue != nil {
		in, out := &in.ThroughputMeasurementValue, &out.ThroughputMeasurementValue
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecDatabase.
func (in *SubscriptionSpecDatabase) DeepCopy() *SubscriptionSpecDatabase {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecDatabaseAlert) DeepCopyInto(out *SubscriptionSpecDatabaseAlert) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecDatabaseAlert.
func (in *SubscriptionSpecDatabaseAlert) DeepCopy() *SubscriptionSpecDatabaseAlert {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecDatabaseAlert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecDatabaseModule) DeepCopyInto(out *SubscriptionSpecDatabaseModule) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecDatabaseModule.
func (in *SubscriptionSpecDatabaseModule) DeepCopy() *SubscriptionSpecDatabaseModule {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecDatabaseModule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecResource) DeepCopyInto(out *SubscriptionSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Allowlist != nil {
		in, out := &in.Allowlist, &out.Allowlist
		*out = new(SubscriptionSpecAllowlist)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = new(SubscriptionSpecCloudProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = make([]SubscriptionSpecDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MemoryStorage != nil {
		in, out := &in.MemoryStorage, &out.MemoryStorage
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PaymentMethodID != nil {
		in, out := &in.PaymentMethodID, &out.PaymentMethodID
		*out = new(string)
		**out = **in
	}
	if in.PersistentStorageEncryption != nil {
		in, out := &in.PersistentStorageEncryption, &out.PersistentStorageEncryption
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecResource.
func (in *SubscriptionSpecResource) DeepCopy() *SubscriptionSpecResource {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionStatus) DeepCopyInto(out *SubscriptionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionStatus.
func (in *SubscriptionStatus) DeepCopy() *SubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}
